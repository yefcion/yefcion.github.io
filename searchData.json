[{"title":"PicGo + GitHub 搭建个人图床工具","url":"/2019/09/27/101-PicGo/","content":"\n写在前面\n\n> 我以前用的 `七牛云 + Mpic` 的组合，后来由于七牛云测试域名收回，我的图床就废了。以前的好多图片都埋藏在七牛云的服务器上，又气又难过。思考好一段时间，想自己搭服务，但成本有点高，备案的域名 + 服务器一年几百块。对于我这种不靠写字谋生的人而言没有必要，所以就停摆了一段时间。直到今天用 GitHub 搭起了图床，可以说非常开心了。所以跟大家分享一下。\n\n- 方便程度：★★★★☆\n- 配置难度：★★☆☆☆\n- 适用环境：win + mac + linux\n- 需要工具：GitHub 账号 + PicGo 客户端\n- 稳定性：背靠 GitHub 和微软，比自建服务器都稳\n- 隐私性：这算是唯一缺点，你的图片别人可以访问\n\n## 1. GitHub 仓库设置\n\n> 流程：新建 public 仓库 -> 创建 token -> 复制 token 备用\n\n### 1.1 新建仓库\n\n点击 git 主页右上角的 `+` 创建 `New repository`；\n\n![](https://raw.githubusercontent.com/yefcion/PicData/master/img/20190311222018.png)\n\n填写仓库信息，例如我就创建了一个 `cloudimg` 的仓库。这里注意，仓库得设置为  `Public` 因为后面通过客户端访问算是外部访问，因此无法访问  `Private` ，这样的话图片传上来之后只能存储不能显示。所以要设置为 `Public`。\n\n![](https://raw.githubusercontent.com/yefcion/PicData/master/img/20190311222514.png)\n\n### 1.2 创建 token 并复制保存\n\n此时仓库已经建立，点击右上角头像，然后进入设置；\n\n![](https://raw.githubusercontent.com/yefcion/PicData/master/img/20190311222925.png)\n\n在页面最下找到 `Developer settings`，点击进入；\n\n![](https://raw.githubusercontent.com/yefcion/PicData/master/img/1552314691232.png)\n\n创建 token；\n\n![](https://raw.githubusercontent.com/yefcion/PicData/master/img/20190311223317.png)\n填 description（也是随心填），勾选复选框 repo ，接着到页面底部 `Generate token` 就完成了；\n\n![](https://raw.githubusercontent.com/yefcion/PicData/master/img/1552314907794.png)\n\n然后复制生成一串字符 token，这个 token 只出现一次，所以要保存一下（我一般记在微信收藏）。\n\n![](https://raw.githubusercontent.com/yefcion/PicData/master/img/20190311223901.png)\n\n## 2. PicGo 客户端配置\n\n### 2.1 下载&安装\n\nPicGo （目前 2.0.4）是一个开源的图床工具，非常优秀。可以到 git 上下载，但下载速度太慢，所以我放了一个百度云的链接，速度快很多。\n\ngit地址：[PicGo](https://github.com/Molunerfinn/PicGo)\n\nWin版下载链接：[百度云](https://pan.baidu.com/s/17KycPMoqNCnc1cR_yQO8nQ) 密码：PicG\n\n### 2.2 配置\n\n先上图\n\n![](https://raw.githubusercontent.com/yefcion/PicData/master/img/20190311224443.png)\n\n- 仓库名 即你的仓库名\n- 分支名 默认 `master`  \n- Token 就是刚刚复制的那一串字符\n- 存储路径 这个可以填也可以不填，填了的话图片就上传到 git 中 `data`  这个文件夹\n- 域名 `https://raw.githubusercontent.com/yefcion/PicData/master `这个要改一下 格式 `https://raw.githubusercontent.com/[仓库名]/master`\n\n然后点确定就可以了。\n\n\n\n然后关于上传的快捷键设置。默认的是 Mac 按键，推荐改成 `Ctrl + alt +c `。\n\n![](https://raw.githubusercontent.com/yefcion/PicData/master/img/20190311224935.png)\n\n综上，操作完成。\n\n本方案唯一缺点，不能私人。但是考虑到 GitHub 上传的图在列表里没法预览，应该没人会闲着没事翻记录。","tags":["图床","Blog","GitHub","PicGo"],"categories":["技术向"]},{"title":"Hello Hexo","url":"/2019/09/27/100-hello-world/","content":"\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n```bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n```bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n```bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n```bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n\n\n## 常用命令\n\n```shell\nhexo g\t\t# 生成 hexo generate\nhexo d\t\t# 发布 hexo deploy\nhexo s\t\t# 启动/重启 hexo server\nhexo clean\t# 清理缓存\n```\n\n新建文章\n\n```shell\nhexo new post <文章名>\t\t# 文章名无需加 .md\n```\n\n其中 `post` 字段共 3 个参数可选\n\n| 参数  | 功能                         | 路径             |\n| ----- | ---------------------------- | ---------------- |\n| post  | 新建文章                     | /source/_posts/  |\n| draft | 新建草稿                     | /source/_drafts/ |\n| page  | 新建页面（标签页，分类页等） | /source/         |\n\n\n\n## 技术案例\n\n参考链接：[Hexo 主题 casper 使用教程](https://zhih.me/hexo-casper-usage/)\n\n直接使用原生主题 Casper 会出问题，我也不知道为什么，好像是插件问题。\n\n网站小图标 favicon:\n\n![](https://raw.githubusercontent.com/yefcion/PicData/master/img/a.png)\n\n博客头像：\n\n![](https://raw.githubusercontent.com/yefcion/PicData/master/img/header.png)\n\n![](https://raw.githubusercontent.com/yefcion/PicData/master/img/蓝色海浪.png)","tags":["网站"],"categories":["技术向"]},{"title":"命名规则","url":"/2019/09/27/000-BlogRule/","content":"\n\n\n## 命名规则\n\n- 000 - 建站规约\n\n- 100 - 技术向\n- 200 - 书评向\n- 300 - 影评向\n- 400 - 游记向\n- 500 - 文学向\n- 600 - 日记向","tags":["网站","规则"],"categories":["建站规约"]}]